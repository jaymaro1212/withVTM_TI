import csv
import requests
import pymysql
import re
from datetime import datetime

RAW_CSV_URL = "https://gitlab.com/exploit-database/exploitdb/-/raw/main/files_exploits.csv"

def get_connection():
  return pymysql.connect(
    host="172.16.250.227",
    user="root",
    password="qhdks00@@",
    database="vtm",
    charset="utf8mb4",
    cursorclass=pymysql.cursors.DictCursor
  )

def extract_cve_code(codes_str):
  match = re.search(r"CVE-\d{4}-\d{4,7}", codes_str or "")
  return match.group(0) if match else ""

def update_exploitdb():
  res = requests.get(RAW_CSV_URL)
  res.encoding = 'utf-8'
  lines = res.text.splitlines()

  reader = csv.DictReader(lines)
  conn = get_connection()
  cursor = conn.cursor()
  now = datetime.now().strftime("%Y-%m-%d")

  insert_count = 0
  update_count = 0

  for row in reader:
    ex_id = int(row["id"])
    file = row["file"]
    description = row["description"]
    date_published = row["date_published"] or None
    author = row["author"]
    type_ = row["type"]
    platform = row["platform"]
    port = row["port"]
    verified = row["verified"]
    codes = row["codes"]
    tags = row["tags"]
    aliases = row["aliases"]
    screenshot = row["screenshot_url"]
    application = row["application_url"]
    source = row["source_url"]

    cve = extract_cve_code(codes)

    cursor.execute("SELECT 1 FROM exploitdb WHERE ex_id = %s", (ex_id,))
    exists = cursor.fetchone()

    cursor.execute("""
      INSERT INTO exploitdb (
        ex_id, file, description, date_published,
        author, type, platform, port, verified,
        cve_code, tags, aliases,
        screenshot_url, application_url, source_url,
        date_added, date_updated
      ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
      ON DUPLICATE KEY UPDATE
        file=VALUES(file),
        description=VALUES(description),
        date_published=VALUES(date_published),
        author=VALUES(author),
        type=VALUES(type),
        platform=VALUES(platform),
        port=VALUES(port),
        verified=VALUES(verified),
        cve_code=VALUES(cve_code),
        tags=VALUES(tags),
        aliases=VALUES(aliases),
        screenshot_url=VALUES(screenshot_url),
        application_url=VALUES(application_url),
        source_url=VALUES(source_url),
        date_updated=VALUES(date_updated)
    """, (
      ex_id, file, description, date_published,
      author, type_, platform, port, verified,
      cve, tags, aliases,
      screenshot, application, source,
      now, now
    ))

    if exists:
      update_count += 1
    else:
      insert_count += 1

  conn.commit()
  conn.close()

  print("✅ ExploitDB 업데이트 완료")
  print(f"├─ 기존 항목 업데이트: {update_count}건")
  print(f"├─ 신규 항목 추가: {insert_count}건")
  print(f"└─ 마지막 업데이트 날짜: {now}")

if __name__ == "__main__":
  update_exploitdb()
